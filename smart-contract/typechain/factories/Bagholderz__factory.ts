/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Bagholderz, BagholderzInterface } from "../Bagholderz";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hiddenMetadataUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAmountPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "mintForAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
    ],
    name: "setCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    name: "setHiddenMetadataUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
    ],
    name: "setMaxMintAmountPerTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setRevealed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "value",
        type: "uint96",
      },
    ],
    name: "setRoyalties",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriPrefix",
        type: "string",
      },
    ],
    name: "setUriPrefix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriSuffix",
        type: "string",
      },
    ],
    name: "setUriSuffix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setWhitelistMintEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriPrefix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriSuffix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040819052600060808190526200001b91600e9162000306565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91600f9162000306565b506014805462ffffff191660011790553480156200006757600080fd5b50604051620032d3380380620032d38339810160408190526200008a9162000479565b855186908690620000a390600290602085019062000306565b508051620000b990600390602084019062000306565b5050600160005550620000cc3362000110565b6001600b55620000dc8462000162565b6012839055620000ec8262000171565b620000f78162000180565b620001043060c8620001a3565b50505050505062000563565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200016c620002a8565b601155565b6200017b620002a8565b601355565b6200018a620002a8565b80516200019f90601090602084019062000306565b5050565b6127106001600160601b0382161115620002175760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b60648201526084015b60405180910390fd5b6001600160a01b0382166200026f5760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c69642072656365697665720000000000000060448201526064016200020e565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600855565b600a546001600160a01b03163314620003045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200020e565b565b828054620003149062000526565b90600052602060002090601f01602090048101928262000338576000855562000383565b82601f106200035357805160ff191683800117855562000383565b8280016001018555821562000383579182015b828111156200038357825182559160200191906001019062000366565b506200039192915062000395565b5090565b5b8082111562000391576000815560010162000396565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620003d457600080fd5b81516001600160401b0380821115620003f157620003f1620003ac565b604051601f8301601f19908116603f011681019082821181831017156200041c576200041c620003ac565b816040528381526020925086838588010111156200043957600080fd5b600091505b838210156200045d57858201830151818301840152908201906200043e565b838211156200046f5760008385830101525b9695505050505050565b60008060008060008060c087890312156200049357600080fd5b86516001600160401b0380821115620004ab57600080fd5b620004b98a838b01620003c2565b97506020890151915080821115620004d057600080fd5b620004de8a838b01620003c2565b965060408901519550606089015194506080890151935060a08901519150808211156200050a57600080fd5b506200051989828a01620003c2565b9150509295509295509295565b600181811c908216806200053b57607f821691505b602082108114156200055d57634e487b7160e01b600052602260045260246000fd5b50919050565b612d6080620005736000396000f3fe6080604052600436106102885760003560e01c8063715018a61161015a578063b767a098116100c1578063d5abeb011161007a578063d5abeb01146107ad578063db4bec44146107c3578063e0a80853146107f3578063e985e9c514610813578063efbd73f414610833578063f2fde38b1461085357600080fd5b8063b767a098146106ed578063b88d4fde1461070d578063c21b471b1461072d578063c23dc68f1461074d578063c87b56dd1461077a578063d2cab0561461079a57600080fd5b806395d89b411161011357806395d89b411461065057806399a2557a14610665578063a0712d6814610685578063a22cb46514610698578063a45ba8e7146106b8578063b071401b146106cd57600080fd5b8063715018a61461059a5780637cb64759146105af5780637ec4a659146105cf5780638462151c146105ef5780638da5cb5b1461061c57806394354fd01461063a57600080fd5b80633ccfd60b116101fe5780635bbb2177116101b75780635bbb2177146104df5780635c975abb1461050c57806362b99ad4146105265780636352211e1461053b5780636caede3d1461055b57806370a082311461057a57600080fd5b80633ccfd60b1461043557806342842e0e1461044a57806344a0d68a1461046a5780634fdd43cb1461048a57806351830227146104aa5780635503a0e8146104ca57600080fd5b806316ba10e01161025057806316ba10e01461036257806316c38b3c1461038257806318160ddd146103a257806323b872dd146103c05780632a55205a146103e05780632eb4a7ab1461041f57600080fd5b806301ffc9a71461028d57806306fdde03146102c2578063081812fc146102e4578063095ea7b31461031c57806313faede61461033e575b600080fd5b34801561029957600080fd5b506102ad6102a83660046124c9565b610873565b60405190151581526020015b60405180910390f35b3480156102ce57600080fd5b506102d7610893565b6040516102b9919061253e565b3480156102f057600080fd5b506103046102ff366004612551565b610925565b6040516001600160a01b0390911681526020016102b9565b34801561032857600080fd5b5061033c610337366004612586565b610969565b005b34801561034a57600080fd5b5061035460115481565b6040519081526020016102b9565b34801561036e57600080fd5b5061033c61037d36600461264d565b6109f0565b34801561038e57600080fd5b5061033c61039d3660046126a5565b610a0f565b3480156103ae57600080fd5b50610354600154600054036000190190565b3480156103cc57600080fd5b5061033c6103db3660046126c0565b610a2a565b3480156103ec57600080fd5b506104006103fb3660046126fc565b610a35565b604080516001600160a01b0390931683526020830191909152016102b9565b34801561042b57600080fd5b50610354600c5481565b34801561044157600080fd5b5061033c610ae1565b34801561045657600080fd5b5061033c6104653660046126c0565b610bbf565b34801561047657600080fd5b5061033c610485366004612551565b610bda565b34801561049657600080fd5b5061033c6104a536600461264d565b610be7565b3480156104b657600080fd5b506014546102ad9062010000900460ff1681565b3480156104d657600080fd5b506102d7610c02565b3480156104eb57600080fd5b506104ff6104fa36600461271e565b610c90565b6040516102b991906127c3565b34801561051857600080fd5b506014546102ad9060ff1681565b34801561053257600080fd5b506102d7610d56565b34801561054757600080fd5b50610304610556366004612551565b610d63565b34801561056757600080fd5b506014546102ad90610100900460ff1681565b34801561058657600080fd5b5061035461059536600461282d565b610d75565b3480156105a657600080fd5b5061033c610dc3565b3480156105bb57600080fd5b5061033c6105ca366004612551565b610dd7565b3480156105db57600080fd5b5061033c6105ea36600461264d565b610de4565b3480156105fb57600080fd5b5061060f61060a36600461282d565b610dff565b6040516102b99190612848565b34801561062857600080fd5b50600a546001600160a01b0316610304565b34801561064657600080fd5b5061035460135481565b34801561065c57600080fd5b506102d7610f4c565b34801561067157600080fd5b5061060f610680366004612880565b610f5b565b61033c610693366004612551565b611121565b3480156106a457600080fd5b5061033c6106b33660046128b3565b611236565b3480156106c457600080fd5b506102d76112cc565b3480156106d957600080fd5b5061033c6106e8366004612551565b6112d9565b3480156106f957600080fd5b5061033c6107083660046126a5565b6112e6565b34801561071957600080fd5b5061033c6107283660046128e6565b611308565b34801561073957600080fd5b5061033c610748366004612961565b611352565b34801561075957600080fd5b5061076d610768366004612551565b611429565b6040516102b991906129a4565b34801561078657600080fd5b506102d7610795366004612551565b6114e3565b61033c6107a83660046129d9565b611652565b3480156107b957600080fd5b5061035460125481565b3480156107cf57600080fd5b506102ad6107de36600461282d565b600d6020526000908152604090205460ff1681565b3480156107ff57600080fd5b5061033c61080e3660046126a5565b6118aa565b34801561081f57600080fd5b506102ad61082e366004612a57565b6118ce565b34801561083f57600080fd5b5061033c61084e366004612a81565b6118fc565b34801561085f57600080fd5b5061033c61086e36600461282d565b61197a565b600061087e826119f3565b8061088d575061088d82611a14565b92915050565b6060600280546108a290612aa4565b80601f01602080910402602001604051908101604052809291908181526020018280546108ce90612aa4565b801561091b5780601f106108f05761010080835404028352916020019161091b565b820191906000526020600020905b8154815290600101906020018083116108fe57829003601f168201915b5050505050905090565b600061093082611a64565b61094d576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061097482610d63565b9050806001600160a01b0316836001600160a01b031614156109a95760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146109e0576109c381336118ce565b6109e0576040516367d9dca160e11b815260040160405180910390fd5b6109eb838383611a9d565b505050565b6109f8611af9565b8051610a0b90600f90602084019061241a565b5050565b610a17611af9565b6014805460ff1916911515919091179055565b6109eb838383611b53565b60008281526009602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b0316928201929092528291610aaa5750604080518082019091526008546001600160a01b0381168252600160a01b90046001600160601b031660208201525b602081015160009061271090610ac9906001600160601b031687612af5565b610ad39190612b2a565b915196919550909350505050565b610ae9611af9565b6002600b541415610b415760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600b556000610b5a600a546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610ba4576040519150601f19603f3d011682016040523d82523d6000602084013e610ba9565b606091505b5050905080610bb757600080fd5b506001600b55565b6109eb83838360405180602001604052806000815250611308565b610be2611af9565b601155565b610bef611af9565b8051610a0b90601090602084019061241a565b600f8054610c0f90612aa4565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3b90612aa4565b8015610c885780601f10610c5d57610100808354040283529160200191610c88565b820191906000526020600020905b815481529060010190602001808311610c6b57829003601f168201915b505050505081565b80516060906000816001600160401b03811115610caf57610caf6125b0565b604051908082528060200260200182016040528015610cfa57816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610ccd5790505b50905060005b828114610d4e57610d29858281518110610d1c57610d1c612b3e565b6020026020010151611429565b828281518110610d3b57610d3b612b3e565b6020908102919091010152600101610d00565b509392505050565b600e8054610c0f90612aa4565b6000610d6e82611d40565b5192915050565b60006001600160a01b038216610d9e576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b610dcb611af9565b610dd56000611e62565b565b610ddf611af9565b600c55565b610dec611af9565b8051610a0b90600e90602084019061241a565b60606000806000610e0f85610d75565b90506000816001600160401b03811115610e2b57610e2b6125b0565b604051908082528060200260200182016040528015610e54578160200160208202803683370190505b509050610e7a604080516060810182526000808252602082018190529181019190915290565b60015b838614610f4057600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16158015928201929092529250610ee357610f38565b81516001600160a01b031615610ef857815194505b876001600160a01b0316856001600160a01b03161415610f385780838780600101985081518110610f2b57610f2b612b3e565b6020026020010181815250505b600101610e7d565b50909695505050505050565b6060600380546108a290612aa4565b6060818310610f7d57604051631960ccad60e11b815260040160405180910390fd5b600080546001851015610f8f57600194505b80841115610f9b578093505b6000610fa687610d75565b905084861015610fc55785850381811015610fbf578091505b50610fc9565b5060005b6000816001600160401b03811115610fe357610fe36125b0565b60405190808252806020026020018201604052801561100c578160200160208202803683370190505b5090508161101f57935061111a92505050565b600061102a88611429565b90506000816040015161103b575080515b885b88811415801561104d5750848714155b1561110e57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161580159282019290925293506110b157611106565b82516001600160a01b0316156110c657825191505b8a6001600160a01b0316826001600160a01b0316141561110657808488806001019950815181106110f9576110f9612b3e565b6020026020010181815250505b60010161103d565b50505092835250909150505b9392505050565b8060008111801561113457506013548111155b6111505760405162461bcd60e51b8152600401610b3890612b54565b60125481611165600154600054036000190190565b61116f9190612b81565b111561118d5760405162461bcd60e51b8152600401610b3890612b99565b818060115461119c9190612af5565b3410156111e05760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b6044820152606401610b38565b60145460ff161561122c5760405162461bcd60e51b8152602060048201526016602482015275151a194810dbdb9d1c9858dd08125cc814185d5cd95960521b6044820152606401610b38565b6109eb3384611eb4565b6001600160a01b0382163314156112605760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60108054610c0f90612aa4565b6112e1611af9565b601355565b6112ee611af9565b601480549115156101000261ff0019909216919091179055565b611313848484611b53565b6001600160a01b0383163b1561134c5761132f84848484611ece565b61134c576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b61135a611af9565b6001600160a01b0382166113b05760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20496e76616c6964205265636569766572000000000000006044820152606401610b38565b6127106001600160601b038216111561141f5760405162461bcd60e51b815260206004820152602b60248201527f455243323938313a20526f79616c7479204665652057696c6c2045786365656460448201526a2053616c6520507269636560a81b6064820152608401610b38565b610a0b8282611fc6565b6040805160608082018352600080835260208084018290528385018290528451928301855281835282018190529281019290925290600183108061146f57506000548310155b1561147a5792915050565b50600082815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff1615801592820192909252906114da5792915050565b61111a83611d40565b60606114ee82611a64565b6115525760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920517565727920466f72204e6f60448201526e3732bc34b9ba32b73a102a37b5b2b760891b6064820152608401610b38565b60145462010000900460ff166115f4576010805461156f90612aa4565b80601f016020809104026020016040519081016040528092919081815260200182805461159b90612aa4565b80156115e85780601f106115bd576101008083540402835291602001916115e8565b820191906000526020600020905b8154815290600101906020018083116115cb57829003601f168201915b50505050509050919050565b60006115fe6120c3565b9050600081511161161e576040518060200160405280600081525061111a565b80611628846120d2565b600f60405160200161163c93929190612bc6565b6040516020818303038152906040529392505050565b8260008111801561166557506013548111155b6116815760405162461bcd60e51b8152600401610b3890612b54565b60125481611696600154600054036000190190565b6116a09190612b81565b11156116be5760405162461bcd60e51b8152600401610b3890612b99565b83806011546116cd9190612af5565b3410156117115760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b6044820152606401610b38565b601454610100900460ff166117685760405162461bcd60e51b815260206004820181905260248201527f5468652057686974656c6973742053616c65204973204e6f74204163746976656044820152606401610b38565b336000908152600d602052604090205460ff16156117c85760405162461bcd60e51b815260206004820152601760248201527f4164647265737320416c726561647920436c61696d65640000000000000000006044820152606401610b38565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061184285858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600c5491508490506121cf565b61187e5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210283937b7b360991b6044820152606401610b38565b336000818152600d60205260409020805460ff191660011790556118a29087611eb4565b505050505050565b6118b2611af9565b60148054911515620100000262ff000019909216919091179055565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b8160008111801561190f57506013548111155b61192b5760405162461bcd60e51b8152600401610b3890612b54565b60125481611940600154600054036000190190565b61194a9190612b81565b11156119685760405162461bcd60e51b8152600401610b3890612b99565b611970611af9565b6109eb8284611eb4565b611982611af9565b6001600160a01b0381166119e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b38565b6119f081611e62565b50565b60006001600160e01b0319821663152a902d60e11b148061088d575061088d825b60006001600160e01b031982166380ac58cd60e01b1480611a4557506001600160e01b03198216635b5e139f60e01b145b8061088d57506301ffc9a760e01b6001600160e01b031983161461088d565b600081600111158015611a78575060005482105b801561088d575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600a546001600160a01b03163314610dd55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b38565b6000611b5e82611d40565b9050836001600160a01b031681600001516001600160a01b031614611b955760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611bb35750611bb385336118ce565b80611bce575033611bc384610925565b6001600160a01b0316145b905080611bee57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611c1557604051633a954ecd60e21b815260040160405180910390fd5b611c2160008487611a9d565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611cf5576000548214611cf557805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b60408051606081018252600080825260208201819052918101919091528180600111611e4957600054811015611e4957600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290611e475780516001600160a01b031615611dde579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215611e42579392505050565b611dde565b505b604051636f96cda160e11b815260040160405180910390fd5b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a0b8282604051806020016040528060008152506121e5565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611f03903390899088908890600401612c8a565b602060405180830381600087803b158015611f1d57600080fd5b505af1925050508015611f4d575060408051601f3d908101601f19168201909252611f4a91810190612cc7565b60015b611fa8573d808015611f7b576040519150601f19603f3d011682016040523d82523d6000602084013e611f80565b606091505b508051611fa0576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6127106001600160601b03821611156120345760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608401610b38565b6001600160a01b03821661208a5760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401610b38565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600855565b6060600e80546108a290612aa4565b6060816120f65750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612120578061210a81612ce4565b91506121199050600a83612b2a565b91506120fa565b6000816001600160401b0381111561213a5761213a6125b0565b6040519080825280601f01601f191660200182016040528015612164576020820181803683370190505b5090505b8415611fbe57612179600183612cff565b9150612186600a86612d16565b612191906030612b81565b60f81b8183815181106121a6576121a6612b3e565b60200101906001600160f81b031916908160001a9053506121c8600a86612b2a565b9450612168565b6000826121dc85846123a9565b14949350505050565b6000546001600160a01b03841661220e57604051622e076360e81b815260040160405180910390fd5b8261222c5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff1981166001600160401b038083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b15612354575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a461231d6000878480600101955087611ece565b61233a576040516368d2bf6b60e11b815260040160405180910390fd5b8082106122d257826000541461234f57600080fd5b612399565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808210612355575b50600090815561134c9085838684565b600081815b8451811015610d4e576123da828683815181106123cd576123cd612b3e565b60200260200101516123ee565b9150806123e681612ce4565b9150506123ae565b600081831061240a57600082815260208490526040902061111a565b5060009182526020526040902090565b82805461242690612aa4565b90600052602060002090601f016020900481019282612448576000855561248e565b82601f1061246157805160ff191683800117855561248e565b8280016001018555821561248e579182015b8281111561248e578251825591602001919060010190612473565b5061249a92915061249e565b5090565b5b8082111561249a576000815560010161249f565b6001600160e01b0319811681146119f057600080fd5b6000602082840312156124db57600080fd5b813561111a816124b3565b60005b838110156125015781810151838201526020016124e9565b8381111561134c5750506000910152565b6000815180845261252a8160208601602086016124e6565b601f01601f19169290920160200192915050565b60208152600061111a6020830184612512565b60006020828403121561256357600080fd5b5035919050565b80356001600160a01b038116811461258157600080fd5b919050565b6000806040838503121561259957600080fd5b6125a28361256a565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156125ee576125ee6125b0565b604052919050565b60006001600160401b0383111561260f5761260f6125b0565b612622601f8401601f19166020016125c6565b905082815283838301111561263657600080fd5b828260208301376000602084830101529392505050565b60006020828403121561265f57600080fd5b81356001600160401b0381111561267557600080fd5b8201601f8101841361268657600080fd5b611fbe848235602084016125f6565b8035801515811461258157600080fd5b6000602082840312156126b757600080fd5b61111a82612695565b6000806000606084860312156126d557600080fd5b6126de8461256a565b92506126ec6020850161256a565b9150604084013590509250925092565b6000806040838503121561270f57600080fd5b50508035926020909101359150565b6000602080838503121561273157600080fd5b82356001600160401b038082111561274857600080fd5b818501915085601f83011261275c57600080fd5b81358181111561276e5761276e6125b0565b8060051b915061277f8483016125c6565b818152918301840191848101908884111561279957600080fd5b938501935b838510156127b75784358252938501939085019061279e565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610f405761281a83855180516001600160a01b031682526020808201516001600160401b0316908301526040908101511515910152565b92840192606092909201916001016127df565b60006020828403121561283f57600080fd5b61111a8261256a565b6020808252825182820181905260009190848201906040850190845b81811015610f4057835183529284019291840191600101612864565b60008060006060848603121561289557600080fd5b61289e8461256a565b95602085013595506040909401359392505050565b600080604083850312156128c657600080fd5b6128cf8361256a565b91506128dd60208401612695565b90509250929050565b600080600080608085870312156128fc57600080fd5b6129058561256a565b93506129136020860161256a565b92506040850135915060608501356001600160401b0381111561293557600080fd5b8501601f8101871361294657600080fd5b612955878235602084016125f6565b91505092959194509250565b6000806040838503121561297457600080fd5b61297d8361256a565b915060208301356001600160601b038116811461299957600080fd5b809150509250929050565b81516001600160a01b031681526020808301516001600160401b0316908201526040808301511515908201526060810161088d565b6000806000604084860312156129ee57600080fd5b8335925060208401356001600160401b0380821115612a0c57600080fd5b818601915086601f830112612a2057600080fd5b813581811115612a2f57600080fd5b8760208260051b8501011115612a4457600080fd5b6020830194508093505050509250925092565b60008060408385031215612a6a57600080fd5b612a738361256a565b91506128dd6020840161256a565b60008060408385031215612a9457600080fd5b823591506128dd6020840161256a565b600181811c90821680612ab857607f821691505b60208210811415612ad957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612b0f57612b0f612adf565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612b3957612b39612b14565b500490565b634e487b7160e01b600052603260045260246000fd5b602080825260139082015272125b9d985b1a5908135a5b9d08105b5bdd5b9d606a1b604082015260600190565b60008219821115612b9457612b94612adf565b500190565b60208082526013908201527213585e0814dd5c1c1b1e48115e18d959591959606a1b604082015260600190565b600084516020612bd98285838a016124e6565b855191840191612bec8184848a016124e6565b8554920191600090600181811c9080831680612c0957607f831692505b858310811415612c2757634e487b7160e01b85526022600452602485fd5b808015612c3b5760018114612c4c57612c79565b60ff19851688528388019550612c79565b60008b81526020902060005b85811015612c715781548a820152908401908801612c58565b505083880195505b50939b9a5050505050505050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612cbd90830184612512565b9695505050505050565b600060208284031215612cd957600080fd5b815161111a816124b3565b6000600019821415612cf857612cf8612adf565b5060010190565b600082821015612d1157612d11612adf565b500390565b600082612d2557612d25612b14565b50069056fea264697066735822122031fb2a28a28fd7a68fe60a9e975bf944fecf53a4c1689e4d231ff4da9c4c4c1c64736f6c63430008090033";

export class Bagholderz__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Bagholderz> {
    return super.deploy(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    ) as Promise<Bagholderz>;
  }
  getDeployTransaction(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    );
  }
  attach(address: string): Bagholderz {
    return super.attach(address) as Bagholderz;
  }
  connect(signer: Signer): Bagholderz__factory {
    return super.connect(signer) as Bagholderz__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BagholderzInterface {
    return new utils.Interface(_abi) as BagholderzInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Bagholderz {
    return new Contract(address, _abi, signerOrProvider) as Bagholderz;
  }
}
